<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:converters="clr-namespace:SaludTotal.Converters"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <converters:EqualityMultiConverter x:Key="EqualityMultiConverter"/>

    <!-- SOLID COLOR PALETTE -->
    <Color x:Key="BackgroundColor">#F0F2F5</Color>
    <Color x:Key="PrimaryColor">#007BFF</Color>
    <Color x:Key="SecondaryColor">#6C757D</Color>
    <Color x:Key="SuccessColor">#28A745</Color>
    <Color x:Key="DangerColor">#DC3545</Color>
    <Color x:Key="WarningColor">#FFC107</Color>
    <Color x:Key="InfoColor">#17A2B8</Color>
    <Color x:Key="DarkColor">#343A40</Color>
    <Color x:Key="LightColor">#F8F9FA</Color>

    <!-- MUTED COLORS -->
    <Color x:Key="PrimaryMutedColor">#E3F2FD</Color>
    <Color x:Key="SecondaryMutedColor">#D6D8DB</Color>
    <Color x:Key="SuccessMutedColor">#E8F5E8</Color>
    <Color x:Key="DangerMutedColor">#FFEBEE</Color>
    <Color x:Key="WarningMutedColor">#FFF8E1</Color>
    <Color x:Key="InfoMutedColor">#A5D8E9</Color>
    <Color x:Key="DarkMutedColor">#A9ACB0</Color>
    <Color x:Key="LightMutedColor">#F1F3F5</Color>

    <!--FOREGROUND COLORS-->
    <Color x:Key="ForegrounColor">#212529</Color>
    <Color x:Key="SecondaryForegroundColor">#464747</Color>
    <Color x:Key="PrimaryForegroundColor">White</Color>
    <Color x:Key="SuccessForegroundColor">White</Color>
    <Color x:Key="InfoForegroundColor">White</Color>
    <Color x:Key="WarningForegroundColor">Black</Color>
    <Color x:Key="DangerForegroundColor">White</Color>
    <Color x:Key="DarkForegroundColor">White</Color>

    <!-- BRUSHES -->
    <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}"/>
    <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
    <SolidColorBrush x:Key="SecondaryBrush" Color="{StaticResource SecondaryColor}"/>
    <SolidColorBrush x:Key="SuccessBrush" Color="{StaticResource SuccessColor}"/>
    <SolidColorBrush x:Key="DangerBrush" Color="{StaticResource DangerColor}"/>
    <SolidColorBrush x:Key="WarningBrush" Color="{StaticResource WarningColor}"/>
    <SolidColorBrush x:Key="InfoBrush" Color="{StaticResource InfoColor}"/>
    <SolidColorBrush x:Key="DarkBrush" Color="{StaticResource DarkColor}"/>
    <SolidColorBrush x:Key="LightBrush" Color="{StaticResource LightColor}"/>

    <!-- MUTED BRUSHES -->
    <SolidColorBrush x:Key="PrimaryMutedBrush" Color="{StaticResource PrimaryMutedColor}" />
    <SolidColorBrush x:Key="SecondaryMutedBrush" Color="{StaticResource SecondaryMutedColor}" />
    <SolidColorBrush x:Key="SuccessMutedBrush" Color="{StaticResource SuccessMutedColor}" />
    <SolidColorBrush x:Key="DangerMutedBrush" Color="{StaticResource DangerMutedColor}" />
    <SolidColorBrush x:Key="WarningMutedBrush" Color="{StaticResource WarningMutedColor}" />
    <SolidColorBrush x:Key="InfoMutedBrush" Color="{StaticResource InfoMutedColor}" />
    <SolidColorBrush x:Key="DarkMutedBrush" Color="{StaticResource DarkMutedColor}" />
    <SolidColorBrush x:Key="LightMutedBrush" Color="{StaticResource LightMutedColor}" />

    <!--FOREGROUND BRUSHES-->
    <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource ForegrounColor}"/>
    <SolidColorBrush x:Key="SecondaryForegroundBrush" Color="{StaticResource SecondaryForegroundColor}"/>
    <SolidColorBrush x:Key="PrimaryForegroundBrush" Color="{StaticResource PrimaryForegroundColor}"/>
    <SolidColorBrush x:Key="SuccessForegroundBrush" Color="{StaticResource SuccessForegroundColor}"/>
    <SolidColorBrush x:Key="InfoForegroundBrush" Color="{StaticResource InfoForegroundColor}"/>
    <SolidColorBrush x:Key="WarningForegroundBrush" Color="{StaticResource WarningForegroundColor}"/>
    <SolidColorBrush x:Key="DangerForegroundBrush" Color="{StaticResource DangerForegroundColor}"/>
    <SolidColorBrush x:Key="DarkForegroundBrush" Color="{StaticResource DarkForegroundColor}"/>
    <SolidColorBrush x:Key="LightForegroundBrush" Color="{StaticResource LightColor}"/>

    <!-- GRADIENT BRUSHES -->
    <LinearGradientBrush x:Key="PrimaryGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#007BFF" Offset="0"/>
        <GradientStop Color="#0069D9" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="SecondaryGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#6C757D" Offset="0"/>
        <GradientStop Color="#5A6268" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="SuccessGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#28A745" Offset="0"/>
        <GradientStop Color="#218838" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DangerGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#DC3545" Offset="0"/>
        <GradientStop Color="#C82333" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="WarningGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#FFC107" Offset="0"/>
        <GradientStop Color="#E0A800" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="InfoGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#17A2B8" Offset="0"/>
        <GradientStop Color="#138496" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DarkGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#343A40" Offset="0"/>
        <GradientStop Color="#23272B" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LightGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#F8F9FA" Offset="0"/>
        <GradientStop Color="#E2E6EA" Offset="1"/>
    </LinearGradientBrush>

    <!-- MUTED GRADIENT BRUSHES -->
    <LinearGradientBrush x:Key="PrimaryMutedGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#B3D7FF" Offset="0"/>
        <GradientStop Color="#91C9FF" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="SecondaryMutedGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#D6D8DB" Offset="0"/>
        <GradientStop Color="#C0C3C6" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="SuccessMutedGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#A8E5B8" Offset="0"/>
        <GradientStop Color="#87D7A0" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DangerMutedGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#F1B0B7" Offset="0"/>
        <GradientStop Color="#E69BA3" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="WarningMutedGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#FFE8A1" Offset="0"/>
        <GradientStop Color="#FFD770" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="InfoMutedGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#A5D8E9" Offset="0"/>
        <GradientStop Color="#8ECFDE" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DarkMutedGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#A9ACB0" Offset="0"/>
        <GradientStop Color="#95989B" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LightMutedGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#F1F3F5" Offset="0"/>
        <GradientStop Color="#E5E7EA" Offset="1"/>
    </LinearGradientBrush>

    <!-- BASE BUTTON STYLE -->
    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="20,8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="PART_Border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="6"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">
                        <Border.Effect>
                            <DropShadowEffect x:Name="PART_Shadow"
                                        Color="Black" 
                                        Direction="315" 
                                        ShadowDepth="2" 
                                        Opacity="0.25" 
                                        BlurRadius="4"/>
                        </Border.Effect>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_Shadow"
                                                   Storyboard.TargetProperty="ShadowDepth"
                                                   To="4" Duration="0:0:0.15"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_Shadow"
                                                   Storyboard.TargetProperty="BlurRadius"
                                                   To="8" Duration="0:0:0.15"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_Shadow"
                                                   Storyboard.TargetProperty="Opacity"
                                                   To="0.35" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_Shadow"
                                                   Storyboard.TargetProperty="ShadowDepth"
                                                   To="2" Duration="0:0:0.15"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_Shadow"
                                                   Storyboard.TargetProperty="BlurRadius"
                                                   To="4" Duration="0:0:0.15"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_Shadow"
                                                   Storyboard.TargetProperty="Opacity"
                                                   To="0.25" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_Shadow"
                                                   Storyboard.TargetProperty="ShadowDepth"
                                                   To="1" Duration="0:0:0.08"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_Shadow"
                                                   Storyboard.TargetProperty="BlurRadius"
                                                   To="2" Duration="0:0:0.08"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_Shadow"
                                                   Storyboard.TargetProperty="Opacity"
                                                   To="0.15" Duration="0:0:0.08"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_Shadow"
                                                   Storyboard.TargetProperty="ShadowDepth"
                                                   To="4" Duration="0:0:0.08"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_Shadow"
                                                   Storyboard.TargetProperty="BlurRadius"
                                                   To="8" Duration="0:0:0.08"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_Shadow"
                                                   Storyboard.TargetProperty="Opacity"
                                                   To="0.35" Duration="0:0:0.08"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_Shadow"
                                                   Storyboard.TargetProperty="Opacity"
                                                   To="0.1" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_Shadow"
                                                   Storyboard.TargetProperty="ShadowDepth"
                                                   To="1" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_Shadow"
                                                   Storyboard.TargetProperty="Opacity"
                                                   To="0.25" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_Shadow"
                                                   Storyboard.TargetProperty="ShadowDepth"
                                                   To="2" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- PRIMARY -->
    <Style x:Key="PrimaryButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource PrimaryGradient}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="#339CFF" Offset="0"/>
                            <GradientStop Color="#0062CC" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="#0056B3" Offset="0"/>
                            <GradientStop Color="#004085" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="#B3D7FF" Offset="0"/>
                            <GradientStop Color="#91C9FF" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- SECONDARY -->
    <Style x:Key="SecondaryButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource SecondaryBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                To="Black" Duration="0:0:0.06" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                To="{StaticResource SecondaryColor}" Duration="0:0:0.06" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#545B62"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource SecondaryMutedBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- SUCCESS -->
    <Style x:Key="SuccessButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource SuccessGradient}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#34CE57"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#1E7E34"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource SuccessMutedGradient}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- DANGER -->
    <Style x:Key="DangerButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource DangerGradient}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E4606D"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#BD2130"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DangerMutedGradient}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- WARNING -->
    <Style x:Key="WarningButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="{StaticResource WarningGradient}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFD454"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#B38600"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource WarningMutedGradient}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- INFO -->
    <Style x:Key="InfoButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource InfoGradient}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#20C1D6"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#0B4A52"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource InfoMutedGradient}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- DARK -->
    <Style x:Key="DarkButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource DarkGradient}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#3E454C"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#121416"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DarkMutedGradient}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- LIGHT -->
    <Style x:Key="LightButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="{StaticResource LightGradient}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFFFFF"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#DEE2E6"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource LightMutedGradient}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- WINDOW CONTROL BUTTON STYLE -->
    <Style x:Key="WindowButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Background" Value="#4A90E2"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="#2C3E50"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Direction="315" ShadowDepth="2" Opacity="0.3" BlurRadius="4"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"
                        Effect="{TemplateBinding Effect}"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#A8D0F3"/>
                            <Setter Property="BorderBrush" Value="#4A90E2"/>
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Black" Direction="315" ShadowDepth="3" Opacity="0.4" BlurRadius="6"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#2C3E50"/>
                            <Setter Property="BorderBrush" Value="#34495E"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TEXT INPUT STYLE-->
    <Style x:Key="RoundedValidationTextBox" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="#CCCCCC"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <AdornedElementPlaceholder />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border 
                    x:Name="border"
                    CornerRadius="6"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}">
                        <Border.Effect>
                            <DropShadowEffect 
                                Color="Black" 
                                Direction="315" 
                                ShadowDepth="2" 
                                Opacity="0.1" 
                                BlurRadius="7"/>
                        </Border.Effect>
                        <ScrollViewer 
                        x:Name="PART_ContentHost" 
                        Focusable="false" 
                        HorizontalScrollBarVisibility="Hidden" 
                        VerticalScrollBarVisibility="Hidden"
                        Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource DangerBrush}"/>
                            <Setter TargetName="border" Property="Background" Value="{StaticResource DangerMutedBrush}"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            <Setter Property="Foreground" Value="{StaticResource DangerBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="#F5F5F5"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#E0E0E0"/>
                            <Setter Property="Foreground" Value="#999999"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--VALIDATION ERROR TEXBLOCK STYLE-->
    <Style x:Key="ValidationErrorTextblock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource DangerBrush}"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>
    
    <!--VALIDATION ERROR BORDER STYLE-->
    <Style x:Key="ValidationErrorBorder" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource DangerMutedBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DangerBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Opacity" Value="0.7"/>
        <Setter Property="CornerRadius" Value="6"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    
    <DrawingImage x:Key="ArrowSVG">
        <DrawingImage.Drawing>
            <DrawingGroup ClipGeometry="M-9.1,-9.1 V84.9 H84.9 V-9.1 H-9.1 Z">
                <DrawingGroup.Transform>
                    <TranslateTransform X="9.1" Y="9.1" />
                </DrawingGroup.Transform>
                <DrawingGroup Opacity="1">
                    <DrawingGroup Opacity="1" Transform="1,0,0,1,-798.203,-587.815">
                        <GeometryDrawing Brush="#FF0C2C67" Geometry="F1 M94,94z M0,0z M798.2,589.314A1.5,1.5,0,0,1,800.761,588.254L834.321,621.81A2.528,2.528,0,0,0,837.885,621.81L871.443,588.254A1.5,1.5,0,1,1,873.564,590.375L840.006,623.932A5.53,5.53,0,0,1,832.199,623.932L798.639,590.375A1.5,1.5,0,0,1,798.2,589.314z">
                            <GeometryDrawing.Pen>
                                <Pen Brush="#474747" Thickness="4.5804" StartLineCap="Flat" EndLineCap="Flat" LineJoin="Miter" />
                            </GeometryDrawing.Pen>
                        </GeometryDrawing>
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>

    <!--SEARCHABLE COMBOBOX STYLE-->
    <Style x:Key="SearchableCombobox" TargetType="ComboBox">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <AdornedElementPlaceholder />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="ComboBox">
                    <Border x:Name="TemplateBorder"
                        CornerRadius="6"
                        Background="White"
                        BorderBrush="#CCCCCC"
                        BorderThickness="2"
                        Padding="2">
                        <Border.Effect>
                            <DropShadowEffect 
                                Color="Black" 
                                Direction="315" 
                                ShadowDepth="2" 
                                Opacity="0.1" 
                                BlurRadius="7"/>
                        </Border.Effect>
                        <Grid>
                        <ToggleButton x:Name="ToggleButton"
                                    Grid.Column="2"
                                    Focusable="false"
                                    IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    ClickMode="Press">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="20" />
                                        </Grid.ColumnDefinitions>
                                            <Border x:Name="Border" Grid.ColumnSpan="2" Background="Transparent" />
                                            <Image Grid.Column="1" Height="14" Width="14" Margin="0, 0, 5, 0" VerticalAlignment="Center" HorizontalAlignment="Right" Source="{StaticResource ArrowSVG}"/>
                                        </Grid>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        
                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False"
                                        Content="{TemplateBinding SelectionBoxItem}"
                                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        Margin="3,3,23,3"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left" />
                        
                        <TextBox x:Name="PART_EditableTextBox"
                               HorizontalAlignment="Left" VerticalAlignment="Center"
                               Margin="3,3,23,3" Focusable="True"
                               Background="Transparent" Visibility="Hidden"
                                 BorderThickness="0"
                               IsReadOnly="{TemplateBinding IsReadOnly}"
                                 />
                        
                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                             AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="White" BorderThickness="1" BorderBrush="#CCCCCC" CornerRadius="6"/>
                                <ScrollViewer Margin="5,10,5,10" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                        <Setter TargetName="TemplateBorder" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                    </Trigger>
                    
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter TargetName="TemplateBorder" Property="BorderBrush" Value="{StaticResource DangerBrush}"/>
                            <Setter TargetName="TemplateBorder" Property="Background" Value="{StaticResource DangerMutedBrush}"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="{StaticResource DangerBrush}"/>
                        </Trigger>
                    
                    <Trigger Property="IsEditable" Value="true">
                        <Setter Property="IsTabStop" Value="false"/>
                        <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                    </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>

    <!--DATAGRID STYLE-->
    <Style TargetType="DataGrid" x:Key="BaseDataGridStyle">
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="MinColumnWidth" Value="50"/>
        <Setter Property="MinRowHeight" Value="25"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#5a6775"/>
        <Setter Property="BorderBrush" Value="#5a6775"/>
    </Style>

    <!-- DATAGRID CLICKEABLE COLUMNHEADERSTYLE -->
    <Style TargetType="DataGridColumnHeader" x:Key="BaseDataGridHeaderStyle">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="#E62C3E50"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="10, 0, 10, 0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#455669"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#455669"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#34495E"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- DATAGRID NONCLICKEABLE COLUMNHEADERSTYALE-->
    <Style TargetType="DataGridColumnHeader" x:Key="BaseNonClickDataGridHeaderStyle">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="#E62C3E50"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="15,10"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#455669"/>
    </Style>

    <!-- DATAGRID CELLSTYLE -->
    <Style TargetType="DataGridCell" x:Key="BaseDataGridCellStyle">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#5a6775"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    
    <!--SortableGridHeaderButton-->
    <Style TargetType="Button" x:Key="SortableHeaderButtonStyle" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.SortCommand}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <StackPanel Orientation="Horizontal" Background="{TemplateBinding Background}">
                        <TextBlock Text="{TemplateBinding Tag}" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                        <TextBlock FontFamily="Segoe UI Symbol" 
                               FontSize="12" 
                               Margin="10, 0, 10, 0"
                               VerticalAlignment="Center"
                               x:Name="SortIndicator">
                            <TextBlock.Style>
                                <Style x:Name="TextName"  TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition>
                                                    <Condition.Binding>
                                                        <MultiBinding Converter="{StaticResource EqualityMultiConverter}">
                                                            <Binding RelativeSource="{RelativeSource AncestorType=DataGrid}" Path="DataContext.CurrentSortColumn"/>
                                                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="CommandParameter"/>
                                                        </MultiBinding>
                                                    </Condition.Binding>
                                                    <Condition.Value>True</Condition.Value>
                                                </Condition>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.CurrentSortDirection}" 
                                                       Value="Ascending"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Text" Value="▲"/>
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition>
                                                    <Condition.Binding>
                                                        <MultiBinding Converter="{StaticResource EqualityMultiConverter}">
                                                            <Binding RelativeSource="{RelativeSource AncestorType=DataGrid}" Path="DataContext.CurrentSortColumn"/>
                                                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="CommandParameter"/>
                                                        </MultiBinding>
                                                    </Condition.Binding>
                                                    <Condition.Value>True</Condition.Value>
                                                </Condition>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.CurrentSortDirection}" 
                                                       Value="Descending"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Text" Value="▼"/>
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
